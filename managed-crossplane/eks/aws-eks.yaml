apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster-aws-eks
  labels:
    crossplane.io/xrd: compositeclusters.demo.anthos.com
    provider: aws
    cluster: eks
spec:
  compositeTypeRef:
    apiVersion: demo.anthos.com/v1
    kind:  CompositeCluster
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  resources:
  - name: ekscluster
    base:
      apiVersion:  eks.aws.gke.cloud.google.com/v1beta1
      kind: Cluster
      metadata:
        name: eks-cluster
        labels:
         role: controlplane
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          version: 1.24
          roleArnSelector:
            matchControllerRef: true
          vpcConfig:
            - subnetIdSelector:
                matchControllerRef: true 
              endpointPrivateAccesss: false
              endpointPublicAccess: true 
        writeConnectionSecretToRef:
          name: kubeconfig
          namespace: default  
    patches:
    # - type: ToCompositeFieldPath
      # fromFieldPath: status.atProvider.identity.oidc.issuer
      # toFieldPath: status.odicIssuerUrl
    - fromFieldPath: spec.parameters.k8sVersion
      toFieldPath: spec.forProvider.version
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: status.clusterName
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.controlPlaneStatus
    - type: ToCompositeFieldPath
      fromFieldPath: spec.forProvider.region
      toFieldPath: status.region
    - fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-ekscluster"
  #   readinessChecks:
  #   - type: MatchString
  #     fieldPath: status.atProvider.status
  #     matchString: ACTIVE

  - name: eksnodegroup
    base:
      apiVersion: eks.aws.gke.cloud.google.com/v1beta1
      kind: NodeGroup
      metadata:
        name: eks-ng
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          clusterNameSelector:
            matchControllerRef: true
           # matchLabels:
           #   role: controlplane
          #instanceTypes: t3.medium
          nodeRoleArnSelector:
            matchLabels: 
              role: nodegroup
          region: us-east-1
          scalingConfig:
            - desiredSize: 1
              maxSize: 6
              minSize: 1
          subnetIdSelector:
            matchLabels: 
              role: nodegroup
            #matchedControllerRef: true
    patches:
      - fromFieldPath: spec.parameters.nodeSize
        toFieldPath: spec.forProvider.instanceTypes[0]
        transforms:
        - type: map
          map:
            small: t3.small
            medium: t3.medium
            large: t3.large
      - fromFieldPath: spec.parameters.minNodeCount
        toFieldPath: spec.forProvider.scalingConfig[0].minSize
      - fromFieldPath: spec.parameters.minNodeCount
        toFieldPath: spec.forProvider.scalingConfig[0].desiredSize
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.status
        toFieldPath: status.nodePoolStatus
    # readinessChecks:
    # - type: MatchString
    #   fieldPath: status.atProvider.status
    #   matchString: ACTIVE
  - name: iamrole-controlplane
    base:
      apiVersion: iam.aws.gke.cloud.google.com/v1beta1
      kind: Role
      metadata:
        labels:
          role: controlplane
        name: controlplane
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          assumeRolePolicy: |
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Service": [
                              "eks.amazonaws.com"
                          ]
                      },
                      "Action": [
                          "sts:AssumeRole"
                      ]
                  }
              ]
            }
          path: /

  - name: iamattachment-controlplane
    base:
      apiVersion: iam.aws.gke.cloud.google.com/v1beta1
      kind: RolePolicyAttachment
      metadata:
        name: cluster-policy1
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
          roleSelector:
            matchLabels:
              role: controlplane
  - name: iamrole-nodegroup
    base:
      apiVersion: iam.aws.gke.cloud.google.com/v1beta1
      kind: Role
      metadata:
        labels:
          role: nodegroup
        name: nodegroup 
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          assumeRolePolicy: |
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Service": [
                              "ec2.amazonaws.com"
                          ]
                      },
                      "Action": [
                          "sts:AssumeRole"
                      ]
                  }
              ]
            }
          path: /
  - name: iamattachment-worker
    base:
      apiVersion: iam.aws.gke.cloud.google.com/v1beta1
      kind: RolePolicyAttachment
      metadata:
        name: node-policy1
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
          roleSelector:
            matchLabels:
              role: nodegroup
  - name: iamattachment-cni
    base:
      apiVersion: iam.aws.gke.cloud.google.com/v1beta1
      kind: RolePolicyAttachment
      metadata:
        name: node-policy2
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
          roleSelector:
            matchLabels:
              role: nodegroup
  - name: iamattachment-registry
    base:
      apiVersion: iam.aws.gke.cloud.google.com/v1beta1
      kind: RolePolicyAttachment
      metadata:
        name: node-policy2 
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
          roleSelector:
            matchLabels:
              role: nodegroup
  - name: vpc-eks
    base:
      apiVersion: ec2.aws.gke.cloud.google.com/v1beta1
      kind: VPC
      metadata:
        name: sample-vpc
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          cidrBlock: 10.0.0.0/16
          tags:
            Name: sample-vpc
    patches:
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: status.vpcId

  - name: subnet-nodepool-1a
    base:
      apiVersion: ec2.aws.gke.cloud.google.com/v1beta1
      kind: Subnet
      metadata:
        name: subnet-nodepool-1a
        labels:
          zone: us-east-1a
          access: public
          role: nodegroup
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          availabilityZone: us-east-1a
          cidrBlock: 10.0.0.0/24
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIpOnLaunch: true
          tags:
            Name: subnet-nodepool-1a
  - name: subnet-nodepool-1b
    base:
      apiVersion: ec2.aws.gke.cloud.google.com/v1beta1
      kind: Subnet
      metadata:
        name: subnet-nodepool-1b
        labels:
          zone: us-east-1b
          access: public
          role: nodegroup
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          availabilityZone: us-east-1b
          cidrBlock: 10.0.1.0/24
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIpOnLaunch: true
          tags:
            Name: subnet-nodepool-1b
  - name: subnet-nodepool-1c
    base:
      apiVersion: ec2.aws.gke.cloud.google.com/v1beta1
      kind: Subnet
      metadata:
        name: subnet-nodepool-1c
        labels:
          zone: us-east-1c
          access: public
          role: nodegroup
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          availabilityZone: us-east-1c
          cidrBlock: 10.0.2.0/24
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIpOnLaunch: true
          tags:
            Name: subnet-nodepool-1c
  - name: inet-gateway
    base:
      apiVersion: ec2.aws.gke.cloud.google.com/v1beta1
      kind: InternetGateway
      metadata:
        name: routegw
        labels:
          name: routegw
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          vpcIdSelector:
            matchControllerRef: true
          tags:
            Name: eks-cluster

  - name: route-to-ig
    base:
      apiVersion: ec2.aws.gke.cloud.google.com/v1beta1
      kind: DefaultRouteTable
      metadata:
        name: routetoIG
        labels:
          name: defaultRouteTable
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          defaultRouteTableIdSelector:
            matchControllerRef: true
          region: us-east-1
          route:
            - cidrBlock: 0.0.0.0/0
              gatewayIdSelector:
                matchControllerRef: true   
  - name: RouteTableAssociation
    base:
      apiVersion: ec2.aws.gke.cloud.google.com/v1beta1
      kind: RouteTableAssociation
      metadata:
        labels:
          testing.gke.cloud.google.com/example-name: rta
        name: rta
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          routeTableIdSelector:
#            matchControllerRef: true
            matchControllerRef: false
            matchLabels:
              name: defaultRouteTable
          subnetIdSelector:
            matchControllerRef: true
          gatewayIdSelector:
            matchControllerRef: true

