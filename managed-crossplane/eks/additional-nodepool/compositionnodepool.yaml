apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster-aws-eks-nodepool
  labels:
    crossplane.io/xrd: compositenodepools.demo.anthos.com
    provider: aws
    cluster: eks
spec:
  compositeTypeRef:
    apiVersion: demo.anthos.com/v1
    kind:  CompositeNodepool
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  resources:
  - name: eksnodegroup
    base:
      apiVersion: eks.aws.gke.cloud.google.com/v1beta1
      kind: NodeGroup
      spec:
        providerConfigRef:
          name: default-aws
        forProvider:
          clusterNameSelector:
            matchControllerRef: false
            matchLabels:
              role: controlplane
          nodeRoleArnSelector:
            matchControllerRef: false
            matchLabels:
              role: nodegroup
          scalingConfig:
          - desiredSize: 1
            maxSize: 6
            minSize: 1
          subnetIdSelector:
            matchControllerRef: false
            matchLabels:
              role: nodegroup
    patches:
    - fromFieldPath: metadata.name
      toFieldPath: metadata.name
#    - fromFieldPath: spec.parameters.clusterName
#      toFieldPath: spec.forProvider.clusterNameRef.name
    - fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
    - type: ToCompositeFieldPath
      fromFieldPath: spec.forProvider.region
      toFieldPath: status.region
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: status.nodePoolName
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.nodePoolStatus
    - fromFieldPath: spec.parameters.minNodeCount
      toFieldPath: spec.forProvider.scalingConfig[0].minSize
    - fromFieldPath: spec.parameters.minNodeCount
      toFieldPath: spec.forProvider.scalingConfig[0].desiredSize
